From 92dc183ee572117a579bb4f036765df9165fa0b2 Mon Sep 17 00:00:00 2001
From: michalbiesek <michal.biesek@intel.com>
Date: Mon, 20 Apr 2020 12:42:31 +0200
Subject: [PATCH 05/13] Update INFO command

- provide information related to PMEM settings

Co-authored-by: jschmieg <jakub.schmiegel@intel.com>
---
 src/server.c  | 10 ++++++++++
 src/zmalloc.c | 11 +++++++++++
 src/zmalloc.h |  2 ++
 3 files changed, 23 insertions(+)

diff --git a/src/server.c b/src/server.c
index 66a377465..7cc62a8c4 100644
--- a/src/server.c
+++ b/src/server.c
@@ -4080,6 +4080,7 @@ sds genRedisInfoString(const char *section) {
     /* Memory */
     if (allsections || defsections || !strcasecmp(section,"memory")) {
         char hmem[64];
+        char hmem_pmem[64];
         char peak_hmem[64];
         char total_system_hmem[64];
         char used_memory_lua_hmem[64];
@@ -4087,7 +4088,9 @@ sds genRedisInfoString(const char *section) {
         char used_memory_rss_hmem[64];
         char maxmemory_hmem[64];
         size_t zmalloc_used = zmalloc_used_memory();
+        size_t zmalloc_pmem_used = zmalloc_used_pmem_memory();
         size_t total_system_mem = server.system_memory_size;
+        size_t pmem_threshold = zmalloc_get_threshold();
         const char *evict_policy = evictPolicyToString();
         long long memory_lua = server.lua ? (long long)lua_gc(server.lua,LUA_GCCOUNT,0)*1024 : 0;
         struct redisMemOverhead *mh = getMemoryOverheadData();
@@ -4100,6 +4103,7 @@ sds genRedisInfoString(const char *section) {
             server.stat_peak_memory = zmalloc_used;
 
         bytesToHuman(hmem,zmalloc_used);
+        bytesToHuman(hmem_pmem,zmalloc_pmem_used);
         bytesToHuman(peak_hmem,server.stat_peak_memory);
         bytesToHuman(total_system_hmem,total_system_mem);
         bytesToHuman(used_memory_lua_hmem,memory_lua);
@@ -4121,6 +4125,9 @@ sds genRedisInfoString(const char *section) {
             "used_memory_startup:%zu\r\n"
             "used_memory_dataset:%zu\r\n"
             "used_memory_dataset_perc:%.2f%%\r\n"
+            "pmem_threshold:%zu\r\n"
+            "used_memory_pmem:%zu\r\n"
+            "used_memory_pmem_human:%s\r\n"
             "allocator_allocated:%zu\r\n"
             "allocator_active:%zu\r\n"
             "allocator_resident:%zu\r\n"
@@ -4161,6 +4168,9 @@ sds genRedisInfoString(const char *section) {
             mh->startup_allocated,
             mh->dataset,
             mh->dataset_perc,
+            pmem_threshold,
+            zmalloc_pmem_used,
+            hmem_pmem,
             server.cron_malloc_stats.allocator_allocated,
             server.cron_malloc_stats.allocator_active,
             server.cron_malloc_stats.allocator_resident,
diff --git a/src/zmalloc.c b/src/zmalloc.c
index 4a4a36724..eb6a5e694 100644
--- a/src/zmalloc.c
+++ b/src/zmalloc.c
@@ -400,9 +400,20 @@ size_t zmalloc_used_memory(void) {
     return um;
 }
 
+size_t zmalloc_used_pmem_memory(void) {
+    size_t um;
+    atomicGet(used_pmem_memory,um);
+    return um;
+}
+
 void zmalloc_set_oom_handler(void (*oom_handler)(size_t)) {
     zmalloc_oom_handler = oom_handler;
 }
+
+size_t zmalloc_get_threshold(void) {
+    return pmem_threshold;
+}
+
 void zmalloc_set_threshold(size_t threshold) {
     pmem_threshold = threshold;
 }
diff --git a/src/zmalloc.h b/src/zmalloc.h
index 974dcf678..b673997e7 100644
--- a/src/zmalloc.h
+++ b/src/zmalloc.h
@@ -93,6 +93,7 @@ void zfree(void *ptr);
 void zfree_dram(void *ptr);
 char *zstrdup(const char *s);
 size_t zmalloc_used_memory(void);
+size_t zmalloc_used_pmem_memory(void);
 void zmalloc_set_oom_handler(void (*oom_handler)(size_t));
 size_t zmalloc_get_rss(void);
 int zmalloc_get_allocator_info(size_t *allocated, size_t *active, size_t *resident);
@@ -103,6 +104,7 @@ size_t zmalloc_get_smap_bytes_by_field(char *field, long pid);
 size_t zmalloc_get_memory_size(void);
 void zlibc_free(void *ptr);
 void zmalloc_set_threshold(size_t threshold);
+size_t zmalloc_get_threshold(void);
 void *zmalloc_dram(size_t size);
 void *zcalloc_dram(size_t size);
 void *zrealloc_dram(void *ptr, size_t size);
-- 
2.19.1.6.gb485710b

